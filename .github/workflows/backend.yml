name: Python Backend CI

on:
  pull_request:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"

jobs:
  lint-and-format:
    name: Lint, Format, and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Install dependencies (with dev)
        run: |
          poetry install --with dev --no-root

      - name: Run Ruff (lint)
        run: poetry run ruff check .

      - name: Run Black (check formatting)
        run: poetry run black --check .

      # Optional: Run tests if you have them
      - name: Run tests (pytest)
        run: |
          if [ -f "tests/__init__.py" ] || [ -d "tests" ]; then
            poetry run pytest
          else
            echo "No tests directory found, skipping tests."
          fi

      # Optional: Upload coverage report, artifacts, etc.

# Best practices:
# - Use matrix to test multiple Python versions
# - Use Poetry for dependency management
# - Fail fast on lint/format errors
# - Add more jobs for build, deploy, or integration as needed
